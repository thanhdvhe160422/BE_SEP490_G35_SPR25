// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planify_BackEnd.Models;

#nullable disable

namespace Planify_BackEnd.Migrations
{
    [DbContext(typeof(PlanifyContext))]
    partial class PlanifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planify_BackEnd.Models.AssignTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("AssignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubTaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeJoin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__AssignTa__3214EC07D4FEF93A");

                    b.HasIndex("AssignId");

                    b.HasIndex("SubTaskId");

                    b.ToTable("AssignTask", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Campus__3214EC07A0547913");

                    b.ToTable("Campus", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.CategoryEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryEventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC07313FA59A");

                    b.HasIndex("CampusId");

                    b.ToTable("CategoryEvent", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__District__3214EC074E4FB66C");

                    b.HasIndex("ProvinceId");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountBudget")
                        .HasColumnType("money");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryEventId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateTime?>("EndOfEvent")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IsPublic")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placed")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeOfEvent")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimePublic")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Event__3214EC07879E40D1");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoryEventId");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ManagerId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.EventMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__EventMed__3214EC078B36DE97");

                    b.HasIndex("EventId");

                    b.HasIndex("MediaId");

                    b.ToTable("EventMedia");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountBudget")
                        .HasColumnType("money");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Group__3214EC079D0EF3F3");

                    b.HasIndex("CreateBy");

                    b.HasIndex("EventId");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.InvoiceImagesSubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("InvoiceImageURL");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceI__3214EC079F7723FF");

                    b.HasIndex("SubTaskId");

                    b.ToTable("InvoiceImagesSubTask", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.InvoiceImagesTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("InvoiceImageURL");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceI__3214EC07B5054C75");

                    b.HasIndex("TaskId");

                    b.ToTable("InvoiceImagesTask", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ImplementerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeJoin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__JoinGrou__3214EC07C7D52D4A");

                    b.HasIndex("GroupId");

                    b.HasIndex("ImplementerId");

                    b.ToTable("JoinGroup", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeJoinProject")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOutProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__JoinProj__3214EC07659A18CC");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("JoinProject", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ImplementerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeJoin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__JoinTask__3214EC07C883397F");

                    b.HasIndex("ImplementerId");

                    b.HasIndex("TaskId");

                    b.ToTable("JoinTask", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.MediaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MediaURL");

                    b.HasKey("Id")
                        .HasName("PK__MediaIte__3214EC074378424F");

                    b.ToTable("MediaItems");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Province__3214EC0742D4AAED");

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ReportUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SendFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Report__3214EC07305FD60E");

                    b.HasIndex("ReportUserId");

                    b.HasIndex("SendFrom");

                    b.HasIndex("TaskId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.ReportMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MediaURL");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ReportMe__3214EC07636296D0");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportMedia");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07BAF9B1A7");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.SendRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__SendRequ__3214EC075EEE23D7");

                    b.HasIndex("EventId");

                    b.HasIndex("ManagerId");

                    b.ToTable("SendRequest", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.SubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountBudget")
                        .HasColumnType("money");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubTaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTaskName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__SubTask__3214EC0768B35C66");

                    b.HasIndex("CreateBy");

                    b.HasIndex("TaskId");

                    b.ToTable("SubTask", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountBudget")
                        .HasColumnType("money");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<double?>("Progress")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Task__3214EC0750EFAB84");

                    b.HasIndex("CreateBy");

                    b.HasIndex("GroupId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Avatar")
                        .HasColumnType("int");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07FEA36B21");

                    b.HasIndex("Avatar");

                    b.HasIndex("CampusId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("Role");

                    b.HasIndex("WardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Ward__3214EC07B5ACCBA1");

                    b.HasIndex("DistrictId");

                    b.ToTable("Ward", (string)null);
                });

            modelBuilder.Entity("Planify_BackEnd.Models.AssignTask", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "Assign")
                        .WithMany("AssignTasks")
                        .HasForeignKey("AssignId")
                        .HasConstraintName("FK__AssignTas__Assig__7C4F7684");

                    b.HasOne("Planify_BackEnd.Models.SubTask", "SubTask")
                        .WithMany("AssignTasks")
                        .HasForeignKey("SubTaskId")
                        .HasConstraintName("FK__AssignTas__SubTa__7D439ABD");

                    b.Navigation("Assign");

                    b.Navigation("SubTask");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.CategoryEvent", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Campus", "Campus")
                        .WithMany("CategoryEvents")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK__CategoryE__Campu__44FF419A");

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.District", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK__District__Provin__3F466844");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Event", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Campus", "Campus")
                        .WithMany("Events")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK__Event__CampusId__5165187F");

                    b.HasOne("Planify_BackEnd.Models.CategoryEvent", "CategoryEvent")
                        .WithMany("Events")
                        .HasForeignKey("CategoryEventId")
                        .HasConstraintName("FK__Event__CategoryE__52593CB8");

                    b.HasOne("Planify_BackEnd.Models.User", "CreateByNavigation")
                        .WithMany("EventCreateByNavigations")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__Event__CreateBy__4F7CD00D");

                    b.HasOne("Planify_BackEnd.Models.User", "Manager")
                        .WithMany("EventManagers")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__Event__ManagerId__5070F446");

                    b.Navigation("Campus");

                    b.Navigation("CategoryEvent");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.EventMedium", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Event", "Event")
                        .WithMany("EventMedia")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventMedi__Event__5535A963");

                    b.HasOne("Planify_BackEnd.Models.MediaItem", "Media")
                        .WithMany("EventMedia")
                        .HasForeignKey("MediaId")
                        .HasConstraintName("FK__EventMedi__Media__5629CD9C");

                    b.Navigation("Event");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Group", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "CreateByNavigation")
                        .WithMany("Groups")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__Group__CreateBy__619B8048");

                    b.HasOne("Planify_BackEnd.Models.Event", "Event")
                        .WithMany("Groups")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Group__EventId__628FA481");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.InvoiceImagesSubTask", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.SubTask", "SubTask")
                        .WithMany("InvoiceImagesSubTasks")
                        .HasForeignKey("SubTaskId")
                        .HasConstraintName("FK__InvoiceIm__SubTa__00200768");

                    b.Navigation("SubTask");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.InvoiceImagesTask", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Task", "Task")
                        .WithMany("InvoiceImagesTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__InvoiceIm__TaskI__02FC7413");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinGroup", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Group", "Group")
                        .WithMany("JoinGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__JoinGroup__Group__75A278F5");

                    b.HasOne("Planify_BackEnd.Models.User", "Implementer")
                        .WithMany("JoinGroups")
                        .HasForeignKey("ImplementerId")
                        .HasConstraintName("FK__JoinGroup__Imple__74AE54BC");

                    b.Navigation("Group");

                    b.Navigation("Implementer");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinProject", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Event", "Event")
                        .WithMany("JoinProjects")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__JoinProje__Event__5DCAEF64");

                    b.HasOne("Planify_BackEnd.Models.User", "User")
                        .WithMany("JoinProjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__JoinProje__UserI__5EBF139D");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.JoinTask", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "Implementer")
                        .WithMany("JoinTasks")
                        .HasForeignKey("ImplementerId")
                        .HasConstraintName("FK__JoinTask__Implem__797309D9");

                    b.HasOne("Planify_BackEnd.Models.Task", "Task")
                        .WithMany("JoinTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__JoinTask__TaskId__787EE5A0");

                    b.Navigation("Implementer");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Report", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "ReportUser")
                        .WithMany("ReportReportUsers")
                        .HasForeignKey("ReportUserId")
                        .HasConstraintName("FK__Report__ReportUs__6EF57B66");

                    b.HasOne("Planify_BackEnd.Models.User", "SendFromNavigation")
                        .WithMany("ReportSendFromNavigations")
                        .HasForeignKey("SendFrom")
                        .HasConstraintName("FK__Report__SendFrom__6D0D32F4");

                    b.HasOne("Planify_BackEnd.Models.Task", "Task")
                        .WithMany("Reports")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__Report__TaskId__6E01572D");

                    b.Navigation("ReportUser");

                    b.Navigation("SendFromNavigation");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.ReportMedium", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Report", "Report")
                        .WithMany("ReportMedia")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK__ReportMed__Repor__71D1E811");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.SendRequest", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.Event", "Event")
                        .WithMany("SendRequests")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__SendReque__Event__59063A47");

                    b.HasOne("Planify_BackEnd.Models.User", "Manager")
                        .WithMany("SendRequests")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__SendReque__Manag__59FA5E80");

                    b.Navigation("Event");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.SubTask", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "CreateByNavigation")
                        .WithMany("SubTasks")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__SubTask__CreateB__6A30C649");

                    b.HasOne("Planify_BackEnd.Models.Task", "Task")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__SubTask__TaskId__693CA210");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Task", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.User", "CreateByNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__Task__CreateBy__656C112C");

                    b.HasOne("Planify_BackEnd.Models.Group", "Group")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Task__GroupId__66603565");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.User", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.MediaItem", "AvatarNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Avatar")
                        .HasConstraintName("FK__Users__Avatar__4AB81AF0");

                    b.HasOne("Planify_BackEnd.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK__Users__CampusId__4CA06362");

                    b.HasOne("Planify_BackEnd.Models.District", "District")
                        .WithMany("Users")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK__Users__DistrictI__48CFD27E");

                    b.HasOne("Planify_BackEnd.Models.Province", "Province")
                        .WithMany("Users")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK__Users__ProvinceI__49C3F6B7");

                    b.HasOne("Planify_BackEnd.Models.Role", "RoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Role")
                        .HasConstraintName("FK__Users__Role__4BAC3F29");

                    b.HasOne("Planify_BackEnd.Models.Ward", "Ward")
                        .WithMany("Users")
                        .HasForeignKey("WardId")
                        .HasConstraintName("FK__Users__WardId__47DBAE45");

                    b.Navigation("AvatarNavigation");

                    b.Navigation("Campus");

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("RoleNavigation");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Ward", b =>
                {
                    b.HasOne("Planify_BackEnd.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK__Ward__DistrictId__4222D4EF");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Campus", b =>
                {
                    b.Navigation("CategoryEvents");

                    b.Navigation("Events");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.CategoryEvent", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.District", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Event", b =>
                {
                    b.Navigation("EventMedia");

                    b.Navigation("Groups");

                    b.Navigation("JoinProjects");

                    b.Navigation("SendRequests");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Group", b =>
                {
                    b.Navigation("JoinGroups");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.MediaItem", b =>
                {
                    b.Navigation("EventMedia");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Province", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Report", b =>
                {
                    b.Navigation("ReportMedia");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.SubTask", b =>
                {
                    b.Navigation("AssignTasks");

                    b.Navigation("InvoiceImagesSubTasks");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Task", b =>
                {
                    b.Navigation("InvoiceImagesTasks");

                    b.Navigation("JoinTasks");

                    b.Navigation("Reports");

                    b.Navigation("SubTasks");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.User", b =>
                {
                    b.Navigation("AssignTasks");

                    b.Navigation("EventCreateByNavigations");

                    b.Navigation("EventManagers");

                    b.Navigation("Groups");

                    b.Navigation("JoinGroups");

                    b.Navigation("JoinProjects");

                    b.Navigation("JoinTasks");

                    b.Navigation("ReportReportUsers");

                    b.Navigation("ReportSendFromNavigations");

                    b.Navigation("SendRequests");

                    b.Navigation("SubTasks");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Planify_BackEnd.Models.Ward", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
